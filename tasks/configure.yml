---
- name: ensure neutron.conf is properly configured
  ini_file:
    dest: /etc/neutron/neutron.conf
    group: neutron
    mode: 0640
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, option: verbose, value: "{{ openstack_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ openstack_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/neutron }
    - { section: DEFAULT, 
        option: rpc_backend, value: neutron.openstack.common.rpc.impl_kombu }
    - { section: DEFAULT, 
        option: rabbit_host, value: "{{ openstack_rabbitmq_host }}" }
    - { section: DEFAULT, 
        option: rabbit_port, value: "{{ openstack_rabbitmq_port }}" }
    - { section: DEFAULT, option: rabbit_userid, value: neutron }
    - { section: DEFAULT, option: rabbit_password, 
        value: "{{ openstack_rabbitmq_neutron_password }}" }
    - { section: DEFAULT, option: rabbit_virtual_host, value: /neutron }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: DEFAULT, option: core_plugin, value: ml2 }
    - { section: DEFAULT, option: service_plugins, value: router }
    - { section: DEFAULT, option: allow_overlapping_ips, value: true }
    - { section: keystone_authtoken, option: auth_uri, 
        value: "{{ openstack_identity_internal_url }}" }
    - { section: keystone_authtoken, option: auth_host, 
        value: "{{ openstack_identity_endpoint_host }}" }
    - { section: keystone_authtoken, option: auth_port, value: 35357 }
    - { section: keystone_authtoken, option: auth_protocol, value: http }
    - { section: keystone_authtoken, option: admin_tenant_name, value: service }
    - { section: keystone_authtoken, option: admin_user, value: neutron }
    - { section: keystone_authtoken, option: admin_password, 
        value: "{{ openstack_identity_neutron_password }}" }
  register: modify_neutron_conf

- name: ensure l3_agent.ini is properly configured
  ini_file:
    dest: /etc/neutron/l3_agent.ini
    group: neutron
    mode: 0640
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, 
        option: verbose, value: "{{ openstack_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ openstack_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/neutron }
    - { section: DEFAULT, option: interface_driver, 
        value: neutron.agent.linux.interface.OVSInterfaceDriver }
    - { section: DEFAULT, option: use_namespaces, value: true }
  register: modify_l3_agent_ini

- name: ensure dhcp_agent.ini is properly configured
  ini_file:
    dest: /etc/neutron/dhcp_agent.ini
    group: neutron
    mode: 0640
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, 
        option: verbose, value: "{{ openstack_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ openstack_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/neutron }
    - { section: DEFAULT, option: interface_driver, 
        value: neutron.agent.linux.interface.OVSInterfaceDriver }
    - { section: DEFAULT, option: use_namespaces, value: true }
    - { section: DEFAULT, 
        option: dhcp_driver, value: neutron.agent.linux.dhcp.Dnsmasq }
    - { section: DEFAULT, 
        option: dnsmasq_config_file, value: /etc/neutron/dnsmasq-neutron.conf }
  register: modify_dhcp_agent_ini

- name: ensure dhcp-neutron.conf is properly configured
  lineinfile:
    dest: /etc/neutron/dnsmasq-neutron.conf
    owner: root
    group: neutron
    mode: 0644
    create: yes
    regexp: ^dhcp-option-force=
    line: dhcp-option-force=26,1454
    state: present 
  register: modify_dnsmasq_neutron_conf

- name: ensure metadata_agent.ini is properly configured
  ini_file:
    dest: /etc/neutron/metadata_agent.ini
    group: neutron
    mode: 0640
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, 
        option: verbose, value: "{{ openstack_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ openstack_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: /var/log/neutron }
    - { section: DEFAULT, 
        option: auth_url, value: "{{ openstack_identity_internal_url }}" }
    - { section: DEFAULT, 
        option: auth_region, value: "{{ openstack_identity_region }}" }
    - { section: DEFAULT, option: admin_tenant_name, value: service }
    - { section: DEFAULT, option: admin_user, value: neutron }
    - { section: DEFAULT, option: admin_password, 
        value: "{{ openstack_identity_neutron_password }}" }
    - { section: DEFAULT, option: nova_metadata_ip, 
        value: "{{ openstack_compute_endpoint_host }}" }
    - { section: DEFAULT, option: metadata_proxy_shared_secret, 
        value: "{{ openstack_compute_metadata_secret }}" }
  register: modify_metadata_agent_ini

- name: ensure ml2_conf.ini is properly configured
  ini_file:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    group: neutron
    mode: 0640
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: ml2, option: type_drivers, value: gre }
    - { section: ml2, option: tenant_network_types, value: gre }
    - { section: ml2, option: mechanism_drivers, value: openvswitch }
    - { section: ml2_type_gre, option: tunnel_id_ranges, value: "1:1000" }
    - { section: ovs, option: local_ip, 
        value: "{{ openstack_network_local_ip }}" }
    - { section: ovs, option: tunnel_type, value: gre }
    - { section: ovs, option: enable_tunneling, value: true }
    - { section: securitygroup, option: firewall_driver, 
        value: neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver }
    - { section: securitygroup, option: enable_security_group, value: true }
  register: modify_ml2_ini

- name: restart dnsmasq if necessary
  command: pkill dnsmasq
  when: modify_dnsmasq_neutron_conf|changed
  ignore_errors: yes

- name: restart neutron services if necessary
  shell: ls /etc/init/neutron-* | grep -v ovs | while read initconf; do service $(basename ${initconf} .conf) restart; done
  when: modify_neutron_conf|changed or 
        modify_l3_agent_ini|changed or 
        modify_dhcp_agent_ini|changed or 
        modify_metadata_agent_ini|changed or 
        modify_ml2_ini|changed

- name: ensure neutron sqlite is deleted
  file:
    dest: /var/lib/neutron/neutron.sqlite
    state: absent
